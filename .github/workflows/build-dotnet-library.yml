name: .NET Library BUILD
on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  release:
    types:
      - published

env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # GitHub Packaged Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/azure-mobile-apps/
  GITHUB_USER: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Official NuGet Feed settings
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdk/dotnet
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.202'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c Release

      - name: Test
        run: dotnet test --no-restore -c Release --collect:"XPlat Code Coverage"

      - name: Pack
        run: dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion=0.0.$GITHUB_RUN_ID

      - name: Coverage
        uses: danielpalme/ReportGenerator-GitHub-Action@4.8.7
        with:
          reports: sdk/dotnet/test/**/*.cobertura.xml
          targetdir: sdk/dotnet/TestResults
          reporttypes: lcov;Html
          sourcedirs: sdk/dotnet
          verbosity: Warning

      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: sdk/dotnet/TestResults

      - name: Upload nupkg
        uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: sdk/dotnet/src/**/bin/Release/*.nupkg      

  prerelease:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v1
        with:
          name: nupkg
      
      - name: Push to GitHub Feed
        run: |
          find . -type f -name '*.nupkg' ! -name '*.symbols.nupkg' -print -exec curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@{} $GITHUB_FEED \;

  deploy:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdk/dotnet
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.202'

      - name: Create Release NuGet package
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          echo Version: $VERSION
          VERSION="${VERSION//v}"
          echo Clean Version: $VERSION
          dotnet pack -v normal -c Release --include-symbols --include-source -p:PackageVersion=$VERSION -o nupkg

      - name: Push to NuGet Feed
        run: |
          find . -type f -name '*.nupkg' ! -name '*.symbols.nupkg' -print -exec dotnet nuget push {} --source $NUGET_FEED --skip-duplicate --api-key $NUGET_KEY \;

  buildtemplate:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: templates/dotnet
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.202'

      - name: Pack
        run: dotnet pack -c Release -p:PackageVersion=$VERSION -o nupkg ./AzureMobileTemplates.csproj

      - name: Push to GitHub Feed
        run: find ./bin -type f -name '*.nupkg' -print -exec curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@{} $GITHUB_FEED \;

  deploytemplate:
    needs: buildtemplate
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: templates/dotnet
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.202'

      - name: Create Release NuGet package
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          echo Version: $VERSION
          VERSION="${VERSION//v}"
          echo Clean Version: $VERSION
          dotnet pack -v normal -c Release -p:PackageVersion=$VERSION -o nupkg ./AzureMobileTemplates.csproj

      - name: Push to NuGet Feed
        run: |
          find ./bin -type f -name '*.nupkg' -print -exec dotnet nuget push {} --source $NUGET_FEED --skip-duplicate --api-key $NUGET_KEY \;
