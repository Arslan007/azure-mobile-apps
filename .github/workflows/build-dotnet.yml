name: Build .NET Libraries

on:
  workflow_dispatch:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable usage telemetry
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Don't display the logo
  DOTNET_NOLOGO: true
  # GitHub Packages Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/azure-mobile-apps/
  GITHUB_USER: adrianhall
  GiTHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.301
      - 
        name: Restore
        working-directory: sdk/dotnet
        run: dotnet restore
      - 
        name: Build
        working-directory: sdk/dotnet
        run: dotnet build -c Release --no-restore
      - 
        name: Test
        working-directory: sdk/dotnet
        run: dotnet test -c Release
      - 
        name: Pack
        working-directory: sdk/dotnet
        run: dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackaVersion=$GITHUB_RUN_ID

      - 
        name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: sdk/dotnet/src/**/bin/Release/*.nupkg
      
  prerelease:
    needs: build
    runs-on: ubuntu-latest
    steps:
      -
        name: Download Artifacts
        uses: actions/download-artifact@v1
        with:
          name: nupkg

      - 
        name: Push to GitHub Package Feed
        run: |
          for f in ./nupkg/*.npkg
          do
            curl -vX PUT u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done

  release:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - 
        name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.301
      
      - 
        name: Create Release NuGet package=@$f
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          echo Version: $VERSION
          VERSION="${VERSION//v}"
          echo Clean Version: $VERSION
          dotnet pack -v normal -c Release --include-symbols --include-source -p:PackageVersion=$VERSION -o nupkg

      - 
        name: Push to GitHub Package Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done
      
