name: Build .NET Libraries

on:
  workflow_dispatch:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable usage telemetry
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Don't display the logo
  DOTNET_NOLOGO: true
  # GitHub Packages Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/Azure/
  GITHUB_USERNAME: adrianhall
  GiTHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Base version for the prerelease builds
  BASE_VERSION: 5.0.0
  MSBUILD_PATH: "%programfiles(x86)%\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\MSBuild.exe"

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: sdk/dotnet
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.301
      - 
        name: Restore
        run: dotnet restore
      - 
        name: Build library
        # run: dotnet build -c Release --no-restore
        run: $MSBUILD_PATH /p:Configuration=Release
      - 
        name: Test library
        run: dotnet test -c Release
      - 
        name: Pack library
        run: dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion="$BASE_VERSION-preview.$GITHUB_RUN_ID"
      - 
        name: Consolidate nupkg
        run: |
          mkdir nupkg
          find src \( -iname '*.nupkg' ! -iname '*.symbols.nupkg' \) -exec cp \{\} ./nupkg \;
      - 
        name: Build template nupkg
        working-directory: templates/dotnet
        run: dotnet pack -c Release
      - 
        name: Copy template nupkg into consolidated nupkg
        working-directory: templates/dotnet
        run: cp bin/Release/*.nupkg ../../sdk/dotnet/nupkg
      - 
        name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: sdk/dotnet/nupkg/*.nupkg
          if-no-files-found: error
      
  prerelease:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      -
        name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: nupkg

      - 
        name: Add nuget source
        run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Azure/index.json"

      - 
        name: Publish to GitHub Packages
        run: dotnet nuget push "./nupkg/*.nupkg" -k ${{ secrets.GITHUB_TOKEN }} -s "github" --skip-duplicate
        